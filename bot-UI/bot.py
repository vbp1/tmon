import telegram
import telegram.ext
from BotEnv import *      # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: —Ç–æ–∫–µ–Ω—ã, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∏—Ç–¥.
import logging
import re
from telegram import LabeledPrice, ReplyKeyboardMarkup, InlineKeyboardButton, \
    InlineKeyboardMarkup, ReplyKeyboardRemove
from telegram.error import (TelegramError, Unauthorized, BadRequest, 
                            TimedOut, ChatMigrated, NetworkError)
from telegram.utils.request import Request
from telegram.ext import messagequeue as mq, updater
from telegram.ext import CommandHandler, Updater, MessageHandler, Filters, \
    PreCheckoutQueryHandler, ConversationHandler, CallbackQueryHandler
from datetime import datetime
import random
import signal, os, asyncio
import Msg

# –í–µ—Ä—Å–∏—è –±–æ—Ç–∞
bot_version = '20200613'

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger('bot-UI.py')

# –ú–µ–Ω—é 
menu_keyboard = [['üîç –î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ'], ['üìã –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π']]


now = datetime.now()
messages_to_fwd = {} # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

q = mq.MessageQueue(all_burst_limit=10, all_time_limit_ms=3000)  # anti-flood control: 10 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ 3000–º—Å
request = Request(con_pool_size=8)

GETCHANNEL = 100
GETSEARCHSTR = 200

# anti-flood control
class MQBot(telegram.bot.Bot):
    def __init__(self, *args, is_queued_def=True, mqueue=None, **kwargs):
        super(MQBot, self).__init__(*args, **kwargs)
        self._is_messages_queued_default = is_queued_def
        self._msg_queue = mqueue or mq.MessageQueue()

    def __del__(self):
        try:
            self._msg_queue.stop()
        except:
            pass

    @mq.queuedmessage
    def send_message(self, *args, **kwargs):
        return super(MQBot, self).send_message(*args, **kwargs)

    @mq.queuedmessage
    def forward_message(self, *args, **kwargs):
        return super(MQBot, self).forward_message(*args, **kwargs)


def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)


def IsInt(s):
    try:
        int(s)
        return True
    except ValueError:
        return False



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è /start
def Start(update, context):
    markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
    context.bot.send_message(chat_id=update.message.chat_id, text='üëã –ü—Ä–∏–≤–µ—Ç!', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ": –ù–∞—á–∞–ª–æ
def AddMon(update, context):
    logger.info('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    context.bot.send_message(chat_id=update.message.chat_id, text='–û–ö, –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è –≥–¥–µ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å.\n' + 
                             '–ü–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ.\n' +
                             '‚ùóÔ∏è <b>–í–ê–ñ–ù–û ‚ùóÔ∏è –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ (–ù–ï –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç—É–¥–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∫–∞–Ω–∞–ª–∞)!</b>' + 
                             '\n\n–ï—Å–ª–∏ —Ä–∞–∑–¥—É–º–∞–ª–∏ - \n–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /cancel',
                             parse_mode=telegram.ParseMode.HTML,
                             reply_markup=ReplyKeyboardRemove())
    return GETCHANNEL


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ": –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
def GetChannel(update, context):
    logger.info('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞.')
    try:
        if update.message.forward_from_chat.type == 'channel':
            logger.info('update.message.forward_from_chat = ' + str(update.message.forward_from_chat))
            ## –ë–ê–ì! –ù–µ —Ä–∞–∑–ª–∏—á–∞–µ—Ç —á–∞—Å—Ç–Ω—ã–µ –∏ –ø—É–±–ª–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã. 
            context.user_data['add_channel_id'] = int(update.message.forward_from_chat.id)
            update.message.forward(int(MonitorID))
            context.bot.send_message(chat_id=update.message.chat_id, text='üëç –û–ö, –í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª [<b>' +
                                     update.message.forward_from_chat.title + '</b>]. \n–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, —Ç–µ–ø–µ—Ä—å –í–∞–º –Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è ' + 
                                     '—Å —Ç–µ–º, —á—Ç–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å: –Ω–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —è –±—É–¥—É –∏—Å–∫–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö ' + 
                                     '–Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –í–∞–º–∏ –∫–∞–Ω–∞–ª–µ. –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ —ç—Ç–∏—Ö —Å–ª–æ–≤ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—Å—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ - —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –í–∞–º.' +
                                     '\n –í —Å–ª–æ–≤–∞—Ö –¥–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ' +
                                     '- –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –∑–Ω–∞–∫ –ø–ª—é—Å (–º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏ –∏ –∑–Ω–∞–∫–∞–º–∏ –ø–ª—é—Å –≤ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–∞). ' +
                                     '–°–ª–æ–≤–∞, —Å–æ—Å—Ç–æ—è—â–∏–µ –º–µ–Ω–µ–µ —á–µ–º –∏–∑ —Ç—Ä–µ—Ö –±—É–∫–≤, –¥–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ –≤ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è—Ö.' + 
                                     '\n–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:\n<i>–∂–µ–Ω–∞ –º—É–∂ —Å–∫–∞–∑–∞–ª–∞ –∑–µ–ª–µ–Ω—ã–µ+—Ç–∞–ø–æ—á–∫–∏ –ø–æ–¥+–∫—Ä–æ–≤–∞—Ç—å—é —É+—Å—Ç–æ–ª–∞</i>' +
                                     '\n\n–ï—Å–ª–∏ —Ä–∞–∑–¥—É–º–∞–ª–∏ - \n–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /cancel',
                                     parse_mode=telegram.ParseMode.HTML)
            logger.info('–ö–∞–∂–µ—Ç—Å—è, —Å –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–º –∫–∞–Ω–∞–ª–æ–º –≤—Å–µ OK, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...')
        else:
            logger.info('–ü—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ –∫–∞–Ω–∞–ª–∞.')
            context.bot.send_message(chat_id=update.message.chat_id, text='ü§∑‚Äç‚ôÇÔ∏è –£–≤—ã, –Ω–æ —è –∏—â—É —Ç–æ–ª—å–∫–æ –≤ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö...' + 
                                     '\n–ê —Ç–æ, —á—Ç–æ –í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ - –Ω–µ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.' + 
                                     '\n–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑?' + '\n\n–ï—Å–ª–∏ —Ä–∞–∑–¥—É–º–∞–ª–∏ - \n–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /cancel')
            return GETCHANNEL
    except:
        logger.exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–∞–Ω–∞–ª–∞.')
        context.bot.send_message(chat_id=update.message.chat_id, text='ü§∑‚Äç‚ôÇÔ∏è –£–≤—ã, –Ω–æ —è –∏—â—É —Ç–æ–ª—å–∫–æ –≤ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö...' + 
                                     '\n–ê —Ç–æ, —á—Ç–æ –í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ - –Ω–µ –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.' + 
                                     '\n–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑?' + '\n\n–ï—Å–ª–∏ —Ä–∞–∑–¥—É–º–∞–ª–∏ - \n–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /cancel')
        return GETCHANNEL
    return GETSEARCHSTR


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ": –°—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞
def GetSearchStr(update, context):
    inputstr = str(update.message.text).strip()
    # –ù—É–∂–Ω–æ –ø–æ–¥—É–º–∞—Ç—å –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–π –ø–æ–∏—Å–∫–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    res = []
    res.append(re.search('[^(\w \+)]', inputstr))
    res.append(re.search('( \+)|(\+ )', inputstr))
    res.append(re.search('( [\w ]{1,2} )|(^[\w ]{1,2} )|( [\w ]{1,2}$)', inputstr))
    if inputstr == '' or re.search('[^(\w \+)]', inputstr) or re.search('( \+)|(\+ )', inputstr) or re.search('( [\w ]{1,2} )|(^[\w ]{1,2} )|( [\w ]{1,2}$)', inputstr):
        logger.error('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–∏—Å–∫–æ–≤–∞—è —Ñ—Ä–∞–∑–∞. –ü—Ä–∏—Å–ª–∞–Ω–æ: ' + inputstr + 'regexp checks: ' + str(res))
        context.bot.send_message(chat_id=update.message.chat_id, text='üòï –¢–∞–∫ –Ω–µ –ø–æ–π–¥–µ—Ç... <b>–í —Å–ª–æ–≤–∞—Ö –¥–æ–ø—É—Å—Ç–∏–º—ã —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã. –°–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ - –µ–≥–æ —Å–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ —á–µ—Ä–µ–∑ –∑–Ω–∞–∫ –ø–ª—é—Å (–º–µ–∂–¥—É —Å–ª–æ–≤–∞–º–∏ –∏ –∑–Ω–∞–∫–∞–º–∏ –ø–ª—é—Å –≤ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–±–µ–ª–∞). –°–ª–æ–≤–∞, —Å–æ—Å—Ç–æ—è—â–∏–µ –º–µ–Ω–µ–µ —á–µ–º –∏–∑ —Ç—Ä–µ—Ö –±—É–∫–≤ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è—Ö.</b>.\n–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑?' + '\n\n–ï—Å–ª–∏ —Ä–∞–∑–¥—É–º–∞–ª–∏ - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /cancel', parse_mode=telegram.ParseMode.HTML)
        return GETSEARCHSTR
    else:
        jsonMsg = Msg.Msg()
        logger.info('–ü–µ—Ä–µ—Å—ã–ª–∞—é –º–æ–Ω–∏—Ç–æ—Ä—É —Å—Ç—Ä–æ–∫—É –ø–æ–∏—Å–∫–∞: ' + inputstr)
        try:
            channelID = context.user_data.pop('add_channel_id')
        except:
            logger.exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—ã—Ç–∞—â–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ add_channel –∏–∑ context.user_data.')
            markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
            context.bot.send_message(chat_id=update.message.chat_id, text='üòï –ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ.', 
                                 reply_markup=markup)
        else:
            if jsonMsg.getjson("NEWMON", {"userID":update.message.chat_id, "channel_ID": channelID, "searchStr": inputstr}):
                SendMsgToUser(update, context, MonitorID, jsonMsg.json)
                logger.info('–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä—É.')
                markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
                context.bot.send_message(chat_id=update.message.chat_id, 
                             text='üëç –û–ö, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É. –ñ–¥–µ–º –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥ (–Ω—É –∏–ª–∏ –º–∏–Ω—É—Ç, –Ω–æ –Ω–µ –¥–æ–ª—å—à–µüòâ)', 
                             reply_markup=markup)
            else:
                markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
                context.bot.send_message(chat_id=update.message.chat_id, text='üòï –ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ.', reply_markup=markup)
        return ConversationHandler.END


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ": /cancel
def Cancel(update, context):
    markup = ReplyKeyboardMarkup(menu_keyboard, resize_keyboard=True)
    context.bot.send_message(chat_id=update.message.chat_id, text='üÜó –û–ö, –≤—Å–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!', reply_markup=markup)
    return ConversationHandler.END


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π"
def LsMon(update, context):
    logger.info('–ö–æ–º–∞–Ω–¥–∞ LSMON –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ—Å—ã–ª–∞—é –º–æ–Ω–∏—Ç–æ—Ä—É')
    jsonMsg = Msg.Msg()
    if jsonMsg.getjson("LSMON", {"userID":update.message.chat_id}):
        SendMsgToUser(update, context, MonitorID, jsonMsg.json)


# –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Å–µ—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def DelAllUserMons(update, context, userID):
    logger.info('–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Å–µ—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}'.format(userID))
    jsonMsg = Msg.Msg()
    if jsonMsg.getjson("RMUSR", {"userID":userID}):
        SendMsgToUser(update, context, MonitorID, jsonMsg.json)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
def DelMon(update, context):
    logger.info('–ö–æ–º–∞–Ω–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' + update.message.text)
    cmd = str(update.message.text)
    i = int(cmd.split('_')[2])
    monsIndex = 'mons_' + str(update.message.chat_id)
    logger.info('monsIndex = ' + monsIndex)
    logger.info('context.bot_data[mons]: ' + str(context.bot_data[monsIndex]))
    try:
        mon = context.bot_data[monsIndex][i]
    except:
        logger.exception('–¢–∞–∫–æ–π –º–æ–Ω–∏—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ context.user_data')
        SendMsgToUser(update, context, update.message.chat_id, 'üòï –£–ø—Å... –ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞–≤–µ—Ä–Ω–æ–µ, –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ –Ω–∞–∂–∞—Ç—å ' +
        '–Ω–∞ –∫–Ω–æ–ø–∫—É [' + str(menu_keyboard[1][0]) +'] –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–Ω–æ–≤–∞ (–µ—Å–ª–∏ –æ–Ω–æ —É–∂–µ –Ω–µ —É–¥–∞–ª–µ–Ω–æ).')
    else:
        logger.info('mon = ' + str(mon))
        jsonMsg = Msg.Msg()
        if jsonMsg.getjson("DELMON", {"userID":update.message.chat_id, "channel_ID": mon[0], "searchStr": mon[2]}):
            SendMsgToUser(update, context, MonitorID, jsonMsg.json)
        else:
            SendMsgToUser(update, context, update.message.chat_id, 'üòï –£–ø—Å... –ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞–≤–µ—Ä–Ω–æ–µ, –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ –Ω–∞–∂–∞—Ç—å ' +
                          '–Ω–∞ –∫–Ω–æ–ø–∫—É [' + str(menu_keyboard[1][0]) +'] –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–Ω–æ–≤–∞ (–µ—Å–ª–∏ –æ–Ω–æ —É–∂–µ –Ω–µ —É–¥–∞–ª–µ–Ω–æ).')


# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –ø—Ä–∏—à–µ–¥—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def FwdMsgToUsers(update, context, fwdto):
    for i in fwdto:
        logger.info('–ü–µ—Ä–µ—Å—ã–ª–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ ' + str(update.message.forward_from_message_id) + ' –∏–∑ —á–∞—Ç–∞ ' + 
                 str(update.message.forward_from_chat) + ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' + str(i))
        try:
            promise = update.message.forward(int(i)) 
            e = promise.done
            e.wait()
            result = promise.result()
        except Unauthorized:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª –±–æ—Ç–∞ - –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            logger.warning('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –∑–∞–ø—Ä–µ—Ç–∏–ª –±–æ—Ç—É –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π. –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.'.format(i))
            DelAllUserMons(update, context, int(i))
        except:
            logger.exception('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ' + str(update.message.forward_from_message_id) + ' –∏–∑ —á–∞—Ç–∞ ' + 
                 str(update.message.forward_from_chat) + ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' + str(i))


# –û—Ç—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def SendMsgToUser(update, context, userID, text):
    # logger.info('–ü–µ—Ä–µ—Å—ã–ª–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ ' + str(text) + ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' + str(userID))
    try:
        promise = context.bot.send_message(chat_id=int(userID), text=text, parse_mode=telegram.ParseMode.HTML)
        e = promise.done
        e.wait()
        result = promise.result()
    except Unauthorized:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª –±–æ—Ç–∞ - –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        logger.warning('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –∑–∞–ø—Ä–µ—Ç–∏–ª –±–æ—Ç—É –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π. –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.'.format(userID))
        DelAllUserMons(update, context, int(userID))
    except:
        logger.exception('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ' + str(text) + ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' + str(userID))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∞
def MonitorMsgHandler(update, context):
    global messages_to_fwd
    if update.message.forward_from_message_id:
        # –ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞–º
        logger.info('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∞. –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞–º. ')
        ## –ë–ê–ì! –ú–æ–Ω–∏—Ç–æ—Ä –ø—Ä–∏—Å—ã–ª–∞–µ—Ç 10-–∑–Ω–∞—á–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞–Ω–∞–ª–∞, –∞ python-telegram-bot –≤ —Å–≤–æ–π—Å—Ç–≤–µ update.message.forward_from_chat.id –≤—ã–¥–∞–µ—Ç 13 –∑–Ω–∞—á–Ω–æ–µ –∑–Ω–∞–∫–æ–≤–æ–µ. –ü–æ–∫–∞ –•–ó –∫–∞–∫ —ç—Ç–æ –ø–æ–±–µ–¥–∏—Ç—å, –ø–æ—ç—Ç–æ–º—É –∫–æ—Å—Ç—ã–ª—å - —Ç—É–ø–æ –±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–Ω–∞–∫–æ–≤ –∏–∑ update.message.forward_from_chat.id
        msgid = str(update.message.forward_from_chat.id)[-10:] + str(update.message.forward_from_message_id)
        if msgid in messages_to_fwd.keys():
            logger.info('–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º ' + msgid + ' –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∫ –ø–µ—Ä–µ—Å—ã–ª–∫–µ.')
            fwdto = messages_to_fwd.pop(msgid)
            FwdMsgToUsers(update, context, fwdto)
        else:
            logger.error('–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º ' + msgid + ' –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ —Å–ø–∏—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∫ –ø–µ—Ä–µ—Å—ã–ª–∫–µ.')
    else:
        logger.info('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∞: ' + update.message.text)
        # –ü—Ä–∏—à–ª–∞ –∫–æ–º–∞–Ω–¥–∞
        jsonMsg = Msg.Msg() 
        if jsonMsg.getcmd(str(update.message.text)):
            logger.info('–ö–æ–º–∞–Ω–¥–∞: ' + jsonMsg.cmd)
            logger.info('–ê—Ä–≥—É–º–µ–Ω—Ç—ã:' + str(jsonMsg.args))
            if jsonMsg.cmd == 'FWDTO':
                userIDs = jsonMsg.args["userIDs"]
                channelid = str(jsonMsg.args["channel-id"])
                messageid = str(jsonMsg.args["message-id"])
                messages_to_fwd[channelid + messageid] = userIDs
            elif jsonMsg.cmd == 'SENDTO':
                ## –†–∞–∑–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã sendto
                userID = jsonMsg.args["userID"]
                text = jsonMsg.args["text"]
                SendMsgToUser(update, context, userID, text)
            elif jsonMsg.cmd == 'SHOWMON':
                ## –†–∞–∑–±–æ—Ä –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É lsmon 
                userID = jsonMsg.args["userID"]
                mons = jsonMsg.args["mons"]
                if mons != []:
                    i = 0
                    monsIndex = 'mons_' + str(userID)
                    logger.info('monsIndex = ' + monsIndex)
                    context.bot_data[monsIndex] = {}
                    for mon in mons:
                        i = i + 1
                        context.bot_data[monsIndex][i] = mon
                        text = "üîç <b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ #" + str(i) + '\n–ö–∞–Ω–∞–ª: </b>' + str(mon[1]) + '\n<b>–ò—â–µ–º: </b>' + str(mon[3]) + '\n\n–£–¥–∞–ª–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: /delete_mon_' + str(i)
                        SendMsgToUser(update, context, userID, text)
                    logger.info('context.bot_data[mons]: ' + str(context.bot_data[monsIndex]))
                else:
                    logger.info('–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + str(userID) + ' –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π.')
                    text=('ü§∑‚Äç‚ôÇÔ∏è –ü–æ–∫–∞ –í—ã –Ω–µ –∑–∞–≤–µ–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.')
                    SendMsgToUser(update, context, userID, text)
            else:
                logger.error('–û—à–∏–±–∫–∞, –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∞ –ø—Ä–∏—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ ' + jsonMsg.cmd)


def main():
    logger.info('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞, –≤–µ—Ä—Å–∏—è {}'.format(bot_version))

    testbot = MQBot(API_TOKEN, request=request, mqueue=q)
    updater = Updater(bot=testbot, use_context=True)
    dp = updater.dispatcher

    jobs = updater.job_queue

#   –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã JobQueue
#    for i in jobs.get_jobs_by_name(Hash_period):
#       testbot.send_message(chatId, 'Jobs:')
#       testbot.send_message(chatId, str(i))
#       i.run(dp)

    AddMonConversationHandler = ConversationHandler(
        entry_points=[MessageHandler(Filters.private & Filters.text(menu_keyboard[0]), AddMon)],
        states={
            GETCHANNEL: [MessageHandler(Filters.private & Filters.forwarded, GetChannel)], 
            GETSEARCHSTR: [MessageHandler(Filters.private & Filters.text & (~ Filters.command('cancel')), GetSearchStr)]
        },
        fallbacks=[MessageHandler(Filters.private & Filters.command('cancel'), Cancel)]
    )

    dp.add_handler(CommandHandler(command = 'start', callback = Start, filters = Filters.private))
    dp.add_error_handler(error)
    dp.add_handler(MessageHandler(Filters.private & Filters.user(MonitorID), MonitorMsgHandler))
    dp.add_handler(AddMonConversationHandler)
    dp.add_handler(MessageHandler(Filters.private & Filters.text(menu_keyboard[1]), LsMon))
    dp.add_handler(MessageHandler(Filters.private & Filters.command & Filters.regex(r'^/delete_mon_\d+$'), DelMon))
    dp.add_handler(CommandHandler(command = 'cancel', callback = Start, filters = Filters.private))

    updater.start_webhook(listen='0.0.0.0',
                          port=8000,
                          url_path=hookpath)

    logger.info('updater.start_webhook()')
    updater.idle()

    updater.stop()
    logger.info('updater.stop()')
    os.kill(os.getpid(), signal.SIGTERM)


if __name__ == '__main__':
    main()
